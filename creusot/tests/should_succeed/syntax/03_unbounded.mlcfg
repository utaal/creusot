
module C03Unbounded_NoBoundsCheck_Interface
  use mach.int.Int
  val no_bounds_check [@cfg:stackify] (_x : int) (_y : int) : int
    ensures { [#"../03_unbounded.rs" 6 10 6 35] result = 4294967294 }
    
end
module C03Unbounded_NoBoundsCheck
  use mach.int.Int
  let rec cfg no_bounds_check [@cfg:stackify] [#"../03_unbounded.rs" 7 0 7 47] (_x : int) (_y : int) : int
    ensures { [#"../03_unbounded.rs" 6 10 6 35] result = 4294967294 }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : int;
  var _x_1 : int;
  var _y_2 : int;
  {
    _x_1 <- _x;
    _y_2 <- _y;
    goto BB0
  }
  BB0 {
    _0 <- ([#"../03_unbounded.rs" 8 4 8 33] (2147483647 : int) + (2147483647 : int));
    return _0
  }
  
end
module C03Unbounded_NoConversion_Stub
  use mach.int.Int
  function no_conversion (x : int) : int
end
module C03Unbounded_NoConversion_Interface
  use mach.int.Int
  function no_conversion (x : int) : int
end
module C03Unbounded_NoConversion
  use mach.int.Int
  function no_conversion [#"../03_unbounded.rs" 12 0 12 35] (x : int) : int =
    [#"../03_unbounded.rs" 13 4 13 21] x
  val no_conversion (x : int) : int
    ensures { result = no_conversion x }
    
end
