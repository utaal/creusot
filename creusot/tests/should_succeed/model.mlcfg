
module Model_Seven_Type
  type t_seven  =
    | C_Seven
    
end
module Model_Impl0_ShallowModel_Stub
  use mach.int.Int
  use Model_Seven_Type as Model_Seven_Type
  function shallow_model (self : Model_Seven_Type.t_seven) : int
end
module Model_Impl0_ShallowModel_Interface
  use mach.int.Int
  use Model_Seven_Type as Model_Seven_Type
  function shallow_model (self : Model_Seven_Type.t_seven) : int
end
module Model_Impl0_ShallowModel
  use mach.int.Int
  use Model_Seven_Type as Model_Seven_Type
  function shallow_model [#"../model.rs" 11 4 11 50] (self : Model_Seven_Type.t_seven) : int
  val shallow_model (self : Model_Seven_Type.t_seven) : int
    ensures { result = shallow_model self }
    
end
module Model_Seven_Interface
  use mach.int.Int
  use prelude.Int128
  use Model_Seven_Type as Model_Seven_Type
  clone Model_Impl0_ShallowModel_Stub as ShallowModel0
  val seven [@cfg:stackify] (_ : ()) : Model_Seven_Type.t_seven
    ensures { [#"../model.rs" 17 10 17 22] ShallowModel0.shallow_model result = 7 }
    
end
module Model_Seven
  use mach.int.Int
  use prelude.Int128
  use Model_Seven_Type as Model_Seven_Type
  clone Model_Impl0_ShallowModel_Interface as ShallowModel0
  val seven [@cfg:stackify] (_ : ()) : Model_Seven_Type.t_seven
    ensures { [#"../model.rs" 17 10 17 22] ShallowModel0.shallow_model result = 7 }
    
end
module Model_Pair_Type
  type t_pair 't 'u =
    | C_Pair 't 'u
    
end
module Model_Impl1_ShallowModel_Stub
  type t
  type u
  use Model_Pair_Type as Model_Pair_Type
  function shallow_model (self : Model_Pair_Type.t_pair t u) : (t, u)
end
module Model_Impl1_ShallowModel_Interface
  type t
  type u
  use Model_Pair_Type as Model_Pair_Type
  function shallow_model (self : Model_Pair_Type.t_pair t u) : (t, u)
end
module Model_Impl1_ShallowModel
  type t
  type u
  use Model_Pair_Type as Model_Pair_Type
  function shallow_model [#"../model.rs" 29 4 29 50] (self : Model_Pair_Type.t_pair t u) : (t, u)
  val shallow_model (self : Model_Pair_Type.t_pair t u) : (t, u)
    ensures { result = shallow_model self }
    
end
module Model_Pair_Interface
  type t
  type u
  use Model_Pair_Type as Model_Pair_Type
  clone Model_Impl1_ShallowModel_Stub as ShallowModel0 with type t = t, type u = u
  val pair [@cfg:stackify] (a : t) (b : u) : Model_Pair_Type.t_pair t u
    ensures { [#"../model.rs" 35 10 35 27] ShallowModel0.shallow_model result = (a, b) }
    
end
module Model_Pair
  type t
  type u
  use Model_Pair_Type as Model_Pair_Type
  clone Model_Impl1_ShallowModel_Interface as ShallowModel0 with type t = t, type u = u
  val pair [@cfg:stackify] (a : t) (b : u) : Model_Pair_Type.t_pair t u
    ensures { [#"../model.rs" 35 10 35 27] ShallowModel0.shallow_model result = (a, b) }
    
end
module Model_Impl0_ShallowModelTy_Type
  use mach.int.Int
  type shallowModelTy  =
    int
end
module CreusotContracts_Logic_Model_ShallowModel_ShallowModelTy_Type
  type self
  type shallowModelTy
end
module CreusotContracts_Logic_Model_ShallowModel_ShallowModel_Stub
  type self
  clone CreusotContracts_Logic_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with type self = self
  function shallow_model (self : self) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Logic_Model_ShallowModel_ShallowModel_Interface
  type self
  clone CreusotContracts_Logic_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with type self = self
  function shallow_model (self : self) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Logic_Model_ShallowModel_ShallowModel
  type self
  clone CreusotContracts_Logic_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with type self = self
  function shallow_model (self : self) : ShallowModelTy0.shallowModelTy
  val shallow_model (self : self) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module Model_Impl0
  use Model_Seven_Type as Model_Seven_Type
  clone Model_Impl0_ShallowModelTy_Type as ShallowModelTy0
  clone Model_Impl0_ShallowModel as ShallowModel0
  clone CreusotContracts_Logic_Model_ShallowModel_ShallowModel_Interface as ShallowModel1 with type self = Model_Seven_Type.t_seven,
    function shallow_model = ShallowModel0.shallow_model,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  clone CreusotContracts_Logic_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy1 with type self = Model_Seven_Type.t_seven,
    type shallowModelTy = ShallowModelTy0.shallowModelTy
end
module Model_Impl1_ShallowModelTy_Type
  type t
  type u
  type shallowModelTy  =
    (t, u)
end
module Model_Impl1
  type t
  type u
  use Model_Pair_Type as Model_Pair_Type
  clone Model_Impl1_ShallowModelTy_Type as ShallowModelTy0 with type t = t, type u = u
  clone Model_Impl1_ShallowModel as ShallowModel0 with type t = t, type u = u
  clone CreusotContracts_Logic_Model_ShallowModel_ShallowModel_Interface as ShallowModel1 with type self = Model_Pair_Type.t_pair t u,
    function shallow_model = ShallowModel0.shallow_model,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  clone CreusotContracts_Logic_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy1 with type self = Model_Pair_Type.t_pair t u,
    type shallowModelTy = ShallowModelTy0.shallowModelTy
end
